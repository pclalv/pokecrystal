#!/usr/bin/env ruby

# Diff two binary files, byte by byte.

require 'json'

ORIGINAL_FILE = ENV.fetch("ORIGINAL_FILE")
MODIFIED_FILE = ENV.fetch("MODIFIED_FILE")

original_file = File.open(ORIGINAL_FILE, "rb") { |f| f.read }.each_byte.to_a
modified_file = File.open(MODIFIED_FILE, "rb") { |f| f.read }.each_byte.to_a

# require 'pry'; binding.pry

raise <<~ERROR unless original_file.length == modified_file.length
  original file and modified file are different lengths! 
  original_file.length: #{original_file.length}
  modified_file.length: #{modified_file.length}
ERROR

runs = []
run = []

original_file.zip(modified_file).each_with_index do |(original_value, modified_value), idx|
  if (original_value != modified_value)
    # continue the run
    run << {
      :index => idx,
      :original_value => original_value,
      :modified_value => modified_value,
    }
  else
    # finish the run
    if !run.empty?
      runs << run 
      run = []
    end
  end
end

runs = runs.map do |run|
  start = run.first
  finish = run.last

  {
    :start => start[:index],
    :finish => finish[:index],
    :original => run.map { |d| d[:original_value] },
    :modified => run.map { |d| d[:modified_value] },
  }
end

puts runs.to_json
